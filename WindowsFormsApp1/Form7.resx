<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button5.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAEBAQEBAQEBAQEBAQECAgMCAgICAgQDAwIDBQQFBQUEBAQF
        BgcGBQUHBgQEBgkGBwgICAgIBQYJCgkICgcICAj/2wBDAQEBAQICAgQCAgQIBQQFCAgICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAj/wAARCABAAEADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/90ABAAF/9oADAMBAAIRAxEAPwD+/imsQoJJUAckntTq/kksf+Crf/BYv/gpfrX7QN9/
        wSN/Y1/ZZ1L9jbw/r+peAbbx/wDFfWrqO68WXUKBZriwgt721aFCk8Ui7klUB1DPv3xoAfmN+0j+1Xp/
        /BS/wd8fP+Ci/wDwUC/au/aa/Z5/4JD+HviHP8L/AIL/AAe+D88UHiP4vatHGd08zk+XK0iRvJtmLKoM
        8cckIiLz+Z/BH4h+HP2P/gp8T/8Ago3/AMET/wBoH9tHSvAPwT13S7H9of8AZU+PU0TTQ6HcXBQT20aF
        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
        nJZQmxXAYyFEb+7KgD//2Q==
</value>
  </data>
</root>